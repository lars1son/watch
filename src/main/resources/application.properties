endpoints.enabled=true
endpoints.mappings.sensitive=true
endpoints.mappings.enabled=true

security.basic.enabled=false
security.enable-csrf = false
#log4j.logger.org.thymeleaf=DEBUG, info
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
#log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

file.url = /opt/Storage/

#file.url = D:\\WatchBackEnd\\Storage\\
#=================================Local eds42 postgres==========================
#
server.port=8080
#test.url = jdbc:postgresql://localhost:5433/test
#test.pas= root
#test.username = postgres
#test.url=jdbc:postgresql://192.168.0.124:5431/watchdb
#test.pas=postgres
#test.username=Rko8Uta5Rko8Uta5
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5433/test}
#  :jdbc:postgresql://localhost:5433/test
spring.datasource.username=${DATASOURCE_USERNAME:postgres}
#  :postgres}
spring.datasource.password=${DATASOURCE_PASSWORD:root}
#  :root}
spring.jpa.generate-ddl=true




#==================================================
spring.mvc.dispatch-options-request=true



#expopromoter.jwt_secret = <secret>

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

server.tomcat.accesslog.enabled=true



spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
spring.http.multipart.enabled=true
